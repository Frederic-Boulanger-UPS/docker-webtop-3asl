# Base webtop image
ARG BASEIMAGE
FROM ${BASEIMAGE}

# For which architecture to build (amd64 or arm64)
ARG arch

ENV HOME="/config"
ENV TZ=Europe/Paris
ARG DEBIAN_FRONTEND=noninteractive

ARG ECLIPSE_RELEASE="2025-06"

# Install Eclipse and the required features/plugins
RUN \
	case ${arch} in \
		arm64) eclipsetgz=eclipse-modeling-${ECLIPSE_RELEASE}-R-linux-gtk-aarch64.tar.gz ;; \
		amd64) eclipsetgz=eclipse-modeling-${ECLIPSE_RELEASE}-R-linux-gtk-x86_64.tar.gz ;; \
		*) echo "Unsupported architecture ${arch}" ;; \
	esac ; \
	curl --remote-name "https://mirror.ibcp.fr/pub/eclipse/technology/epp/downloads/release/${ECLIPSE_RELEASE}/R/${eclipsetgz}" ; \
	tar zxf ${eclipsetgz} && rm ${eclipsetgz} ; \
	mv eclipse /usr/local/eclipse ; \
	for feature in \
		"org.eclipse.acceleo.feature.group" \
		"org.eclipse.ocl.examples.feature.group" \
		"org.eclipse.m2m.qvt.oml.tools.coverage.feature.group" \
		"org.eclipse.m2m.qvt.oml.tools.coverage.source.feature.group" \
		"org.eclipse.m2m.qvt.oml.sdk.feature.group" \
		"org.eclipse.m2m.qvt.oml.sdk.source.feature.group" \
		"org.eclipse.xtext.sdk.feature.group" \
		"org.eclipse.cdt.feature.group" \
		"org.eclipse.linuxtools.cdt.libhover.feature.feature.group" \
		"org.eclipse.cdt.testsrunner.feature.feature.group" \
		"org.eclipse.wst.xml_ui.feature.feature.group" \
		"org.eclipse.wst.jsdt.feature.feature.group" \
		"org.eclipse.wildwebdeveloper.feature.feature.group" \
		"org.eclipse.xtend.sdk.feature.group" \
		"org.eclipse.wst.xsl.feature.feature.group" ; \
	do /usr/local/eclipse/eclipse -nosplash \
			-application org.eclipse.equinox.p2.director \
			-repository https://download.eclipse.org/releases/${ECLIPSE_RELEASE}/ \
			-installIU "${feature}" ; \
	done

# Install MiniARM assembler plugin
RUN /usr/local/eclipse/eclipse -nosplash \
			-application org.eclipse.equinox.p2.director \
			-repository https://wdi.centralesupelec.fr/boulanger/misc/mini-arm-update-site \
			-installIU "fr.centralesupelec.infonum.sl.miniarm.feature.feature.group"

# COPY mydocker_startup/wrapper_script.sh /usr/local/lib/wrapper_script.sh

RUN mkdir -p /init-config/init
COPY init-config-eclipse/init/* /init-config/init

RUN \
	cd /init-config/init ; \
	for script in *.sh ; \
	do \
		chmod +x $script ; \
		./$script ; \
	done ; \
	cd .. ; rm -r init

# Clean up
RUN apt-get autoremove && apt-get autoclean && apt-get clean ; \
		rm -rf \
    /tmp/* \
    /config/* \
    /var/lib/apt/lists/* \
    /var/tmp/*

ENTRYPOINT ["/bin/bash", "/usr/local/lib/wrapper_script.sh"]
